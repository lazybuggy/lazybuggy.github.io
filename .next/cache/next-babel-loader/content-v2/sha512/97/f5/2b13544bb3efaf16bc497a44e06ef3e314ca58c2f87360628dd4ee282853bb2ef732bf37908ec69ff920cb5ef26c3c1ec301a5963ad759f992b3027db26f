{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport styles from \"../styles/WordSwitcher.module.css\"; // import classnames from 'classnames';\n\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nvar WordSwitcher = function WordSwitcher(_ref) {\n  _s();\n\n  var words = _ref.words,\n      colour = _ref.colour,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 0.5 : _ref$interval;\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = useState(words.length),\n      optionCount = _useState2[0],\n      setOptionCount = _useState2[1];\n\n  var _useState3 = useState(words[0]),\n      word = _useState3[0],\n      setWord = _useState3[1];\n\n  var wordInterval = null;\n  useEffect(function () {\n    wordInterval = setInterval(function () {\n      return setIndex(function (index) {\n        return index + 1;\n      });\n    }, 9000);\n  }, []); //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n\n  useEffect(function () {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.previousArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: function onClick() {\n        return setIndex(function (index) {\n          return index - 1;\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.nextArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: function onClick() {\n        return setIndex(function (index) {\n          return index + 1;\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WordSwitcher, \"Q7/o8d3yemHy3F6wggy6rQ9JeMk=\");\n\n_c = WordSwitcher;\nexport default WordSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordSwitcher\");","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["styles","useState","useEffect","WordSwitcher","words","colour","interval","index","setIndex","length","optionCount","setOptionCount","word","setWord","wordInterval","setInterval","container","previousArrow","arrow","join","color","textContainer","nextArrow"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,mCAAnB,C,CACA;;AAEA,SAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,YAAiD,GAAG,SAApDA,YAAoD,OAIpD;AAAA;;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,GACP;;AAAA,kBACsBL,QAAQ,CAAC,CAAD,CAD9B;AAAA,MACGM,KADH;AAAA,MACUC,QADV;;AAAA,mBAEkCP,QAAQ,CAACG,KAAK,CAACK,MAAP,CAF1C;AAAA,MAEGC,WAFH;AAAA,MAEgBC,cAFhB;;AAAA,mBAGoBV,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAH5B;AAAA,MAGGQ,IAHH;AAAA,MAGSC,OAHT;;AAIJ,MAAIC,YAAY,GAAG,IAAnB;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,YAAY,GAAGC,WAAW,CAAC;AAAA,aAAMP,QAAQ,CAAC,UAACD,KAAD;AAAA,eAAWA,KAAK,GAAG,CAAnB;AAAA,OAAD,CAAd;AAAA,KAAD,EAAuC,IAAvC,CAA1B;AACD,GAFQ,EAEN,EAFM,CAAT,CANI,CASJ;AACA;AACA;;AACAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGG,WAA1B,EAAuC;AACrCG,MAAAA,OAAO,CAACT,KAAK,CAACG,KAAD,CAAN,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAKG,WAAd,EAA2B;AAChCG,MAAAA,OAAO,CAACT,KAAK,CAAC,CAAD,CAAN,CAAP;AACAI,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAHM,MAGA,IAAID,KAAK,GAAG,CAAZ,EAAe;AACpBM,MAAAA,OAAO,CAACT,KAAK,CAACM,WAAW,GAAG,CAAf,CAAN,CAAP;AACAF,MAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AACD;AACF,GAVQ,EAUN,CAACH,KAAD,EAAQG,WAAR,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACgB,SAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAE,CAAChB,MAAM,CAACiB,aAAR,EAAuBjB,MAAM,CAACkB,KAA9B,EAAqCC,IAArC,CAA0C,GAA1C,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAFT;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMG,QAAQ,CAAC,UAACD,KAAD;AAAA,iBAAWA,KAAK,GAAG,CAAnB;AAAA,SAAD,CAAd;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,aADF,eAME;AAAK,MAAA,SAAS,EAAEP,MAAM,CAACqB,aAAvB;AAAA,gBAAuCT;AAAvC;AAAA;AAAA;AAAA;AAAA,aANF,eAOE;AACE,MAAA,SAAS,EAAE,CAACZ,MAAM,CAACsB,SAAR,EAAmBtB,MAAM,CAACkB,KAA1B,EAAiCC,IAAjC,CAAsC,GAAtC,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAFT;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMG,QAAQ,CAAC,UAACD,KAAD;AAAA,iBAAWA,KAAK,GAAG,CAAnB;AAAA,SAAD,CAAd;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA3CD;;GAAMJ,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import styles from \"../styles/WordSwitcher.module.css\";\n// import classnames from 'classnames';\nimport { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n  interval = 0.5,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n  var wordInterval = null;\n\n  useEffect(() => {\n    wordInterval = setInterval(() => setIndex((index) => index + 1), 9000);\n  }, []);\n  //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n\n  return (\n    <div className={styles.container}>\n      <button\n        className={[styles.previousArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index - 1)}\n      />\n      <div className={styles.textContainer}>{word}</div>\n      <button\n        className={[styles.nextArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index + 1)}\n      />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}