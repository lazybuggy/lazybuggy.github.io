{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\";\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher = ({\n  words,\n  colour\n}) => {\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: optionCount,\n    1: setOptionCount\n  } = useState(words.length);\n  const {\n    0: word,\n    1: setWord\n  } = useState(words[0]); //   console.log(\"workingn \", words, colour);\n\n  useEffect(() => {\n    if (index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index <= 0) {\n      console.log(\"im in idex <= 0 \", index);\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    } else {\n      console.log(\"wnhats hapengin \", index);\n    }\n\n    console.log(\"woooo \", index);\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uparrow\",\n      onClick: () => setIndex(index - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), word, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"darrow\",\n      onClick: () => setIndex(index + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WordSwitcher;","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["useState","useEffect","WordSwitcher","words","colour","index","setIndex","optionCount","setOptionCount","length","word","setWord","console","log"],"mappings":";;AACA,SAA4BA,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,YAAiD,GAAG,CAAC;AACzDC,EAAAA,KADyD;AAEzDC,EAAAA;AAFyD,CAAD,KAGpD;AACJ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAACG,KAAK,CAACM,MAAP,CAA9C;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAAhC,CAHI,CAKJ;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,GAAGE,WAAZ,EAAyB;AACvBI,MAAAA,OAAO,CAACR,KAAK,CAACE,KAAD,CAAN,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAKE,WAAd,EAA2B;AAChCI,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAD,CAAN,CAAP;AACAG,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAHM,MAGA,IAAID,KAAK,IAAI,CAAb,EAAgB;AACrBO,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,KAAhC;AAEAM,MAAAA,OAAO,CAACR,KAAK,CAACI,WAAW,GAAG,CAAf,CAAN,CAAP;AACAD,MAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,CAAR;AACD,KALM,MAKA;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,KAAhC;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACD,GAfQ,EAeN,CAACA,KAAD,CAfM,CAAT;AAiBA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAE,SAAnB;AAA8B,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,IAFH,eAGE;AAAQ,MAAA,SAAS,EAAE,QAAnB;AAA6B,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAT;AAApD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD;;AAoCA,eAAeH,YAAf","sourcesContent":["import { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n\n  //   console.log(\"workingn \", words, colour);\n\n  useEffect(() => {\n    if (index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index <= 0) {\n      console.log(\"im in idex <= 0 \", index);\n\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    } else {\n      console.log(\"wnhats hapengin \", index);\n    }\n    console.log(\"woooo \", index);\n  }, [index]);\n\n  return (\n    <div>\n      <button className={\"uparrow\"} onClick={() => setIndex(index - 1)} />\n      {word}\n      <button className={\"darrow\"} onClick={() => setIndex(index + 1)} />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}