{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\";\nimport styles from \"../styles/WordSwitcher.module.css\"; // import classnames from 'classnames';\n\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher = ({\n  words,\n  colour,\n  autoplay = true,\n  interval = 5000\n}) => {\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: optionCount,\n    1: setOptionCount\n  } = useState(words.length);\n  const {\n    0: word,\n    1: setWord\n  } = useState(words[0]);\n  var wordInterval = null;\n  useEffect(() => {\n    wordInterval = setInterval(() => setIndex(index => index + 1), interval);\n  }, []); //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.previousArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: () => setIndex(index => index - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.nextArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: () => setIndex(index => index + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WordSwitcher;","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["styles","useState","useEffect","WordSwitcher","words","colour","autoplay","interval","index","setIndex","optionCount","setOptionCount","length","word","setWord","wordInterval","setInterval","container","previousArrow","arrow","join","color","textContainer","nextArrow"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mCAAnB,C,CACA;;AAEA,SAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,YAAiD,GAAG,CAAC;AACzDC,EAAAA,KADyD;AAEzDC,EAAAA,MAFyD;AAGzDC,EAAAA,QAAQ,GAAG,IAH8C;AAIzDC,EAAAA,QAAQ,GAAG;AAJ8C,CAAD,KAKpD;AACJ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAACG,KAAK,CAACQ,MAAP,CAA9C;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAAhC;AACA,MAAIW,YAAY,GAAG,IAAnB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,GAAGC,WAAW,CAAC,MAAMP,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAf,EAAuCD,QAAvC,CAA1B;AACD,GAFQ,EAEN,EAFM,CAAT,CANI,CASJ;AACA;AACA;;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGE,WAA1B,EAAuC;AACrCI,MAAAA,OAAO,CAACV,KAAK,CAACI,KAAD,CAAN,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAKE,WAAd,EAA2B;AAChCI,MAAAA,OAAO,CAACV,KAAK,CAAC,CAAD,CAAN,CAAP;AACAK,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAHM,MAGA,IAAID,KAAK,GAAG,CAAZ,EAAe;AACpBM,MAAAA,OAAO,CAACV,KAAK,CAACM,WAAW,GAAG,CAAf,CAAN,CAAP;AACAD,MAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,CAAR;AACD;AACF,GAVQ,EAUN,CAACF,KAAD,EAAQE,WAAR,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACiB,SAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAE,CAACjB,MAAM,CAACkB,aAAR,EAAuBlB,MAAM,CAACmB,KAA9B,EAAqCC,IAArC,CAA0C,GAA1C,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEhB;AAAT,OAFT;AAGE,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB;AAHzB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAER,MAAM,CAACsB,aAAvB;AAAA,gBAAuCT;AAAvC;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AACE,MAAA,SAAS,EAAE,CAACb,MAAM,CAACuB,SAAR,EAAmBvB,MAAM,CAACmB,KAA1B,EAAiCC,IAAjC,CAAsC,GAAtC,CADb;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEhB;AAAT,OAFT;AAGE,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB;AAHzB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5CD;;AA8CA,eAAeL,YAAf","sourcesContent":["import styles from \"../styles/WordSwitcher.module.css\";\n// import classnames from 'classnames';\nimport { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n  autoplay = true,\n  interval = 5000,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n  var wordInterval = null;\n\n  useEffect(() => {\n    wordInterval = setInterval(() => setIndex((index) => index + 1), interval);\n  }, []);\n  //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n\n  return (\n    <div className={styles.container}>\n      <button\n        className={[styles.previousArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index - 1)}\n      />\n      <div className={styles.textContainer}>{word}</div>\n      <button\n        className={[styles.nextArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index + 1)}\n      />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}