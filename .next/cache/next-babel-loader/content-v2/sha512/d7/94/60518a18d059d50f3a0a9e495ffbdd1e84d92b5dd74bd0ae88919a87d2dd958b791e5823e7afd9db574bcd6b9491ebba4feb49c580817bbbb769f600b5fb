{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport styles from \"../styles/WordSwitcher.module.css\"; // import classnames from 'classnames';\n\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nvar WordSwitcher = function WordSwitcher(_ref) {\n  _s();\n\n  var words = _ref.words,\n      colour = _ref.colour,\n      _ref$autoplay = _ref.autoplay,\n      autoplay = _ref$autoplay === void 0 ? true : _ref$autoplay,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 5000 : _ref$interval;\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = useState(words.length),\n      optionCount = _useState2[0],\n      setOptionCount = _useState2[1];\n\n  var _useState3 = useState(words[0]),\n      word = _useState3[0],\n      setWord = _useState3[1];\n\n  useEffect(function () {\n    if (autoplay) {\n      var wordInterval = setInterval(function () {\n        return setIndex(function (index) {\n          return index + 1;\n        });\n      }, interval);\n      return function () {\n        return clearInterval(wordInterval);\n      };\n    }\n  }, []); //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n\n  useEffect(function () {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.previousArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: function onClick() {\n        return setIndex(function (index) {\n          return index - 1;\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textContainer,\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: [styles.nextArrow, styles.arrow].join(\" \"),\n      style: {\n        color: colour\n      },\n      onClick: function onClick() {\n        return setIndex(function (index) {\n          return index + 1;\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WordSwitcher, \"Q7/o8d3yemHy3F6wggy6rQ9JeMk=\");\n\n_c = WordSwitcher;\nexport default WordSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordSwitcher\");","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["styles","useState","useEffect","WordSwitcher","words","colour","autoplay","interval","index","setIndex","length","optionCount","setOptionCount","word","setWord","wordInterval","setInterval","clearInterval","container","previousArrow","arrow","join","color","textContainer","nextArrow"],"mappings":"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","sourcesContent":["import styles from \"../styles/WordSwitcher.module.css\";\n// import classnames from 'classnames';\nimport { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n  autoplay = true,\n  interval = 5000,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n\n  useEffect(() => {\n    if (autoplay) {\n      let wordInterval = setInterval(\n        () => setIndex((index) => index + 1),\n        interval\n      );\n      return () => clearInterval(wordInterval);\n    }\n  }, []);\n  //   console.log(\"workingn \", words, colour);\n  //   const buttonClass\n  //className={classnames({[styles.previousArrow]:true})}\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n\n  return (\n    <div className={styles.container}>\n      <button\n        className={[styles.previousArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index - 1)}\n      />\n      <div className={styles.textContainer}>{word}</div>\n      <button\n        className={[styles.nextArrow, styles.arrow].join(\" \")}\n        style={{ color: colour }}\n        onClick={() => setIndex((index) => index + 1)}\n      />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}