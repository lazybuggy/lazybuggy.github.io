{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nvar WordSwitcher = function WordSwitcher(_ref) {\n  _s();\n\n  var words = _ref.words,\n      colour = _ref.colour;\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = useState(words.length),\n      optionCount = _useState2[0],\n      setOptionCount = _useState2[1];\n\n  var _useState3 = useState(words[0]),\n      word = _useState3[0],\n      setWord = _useState3[1]; //   console.log(\"workingn \", words, colour);\n\n\n  useEffect(function () {\n    if (index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index <= 0) {\n      console.log(\"im in idex <= 0 \", index);\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    } else {\n      console.log(\"wnhats hapengin \", index);\n    }\n\n    console.log(\"woooo \", index);\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"uparrow\",\n      onClick: function onClick() {\n        return setIndex(index - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), word, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"darrow\",\n      onClick: function onClick() {\n        return setIndex(index + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WordSwitcher, \"xx0b4huC5dBI3F3TeWulr85+7fo=\");\n\n_c = WordSwitcher;\nexport default WordSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordSwitcher\");","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["useState","useEffect","WordSwitcher","words","colour","index","setIndex","length","optionCount","setOptionCount","word","setWord","console","log"],"mappings":";;;;;;AACA,SAA4BA,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAMC,YAAiD,GAAG,SAApDA,YAAoD,OAGpD;AAAA;;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,MACI,QADJA,MACI;;AAAA,kBACsBJ,QAAQ,CAAC,CAAD,CAD9B;AAAA,MACGK,KADH;AAAA,MACUC,QADV;;AAAA,mBAEkCN,QAAQ,CAACG,KAAK,CAACI,MAAP,CAF1C;AAAA,MAEGC,WAFH;AAAA,MAEgBC,cAFhB;;AAAA,mBAGoBT,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAH5B;AAAA,MAGGO,IAHH;AAAA,MAGSC,OAHT,kBAKJ;;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,KAAK,GAAGG,WAAZ,EAAyB;AACvBG,MAAAA,OAAO,CAACR,KAAK,CAACE,KAAD,CAAN,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAKG,WAAd,EAA2B;AAChCG,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAD,CAAN,CAAP;AACAG,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAHM,MAGA,IAAID,KAAK,IAAI,CAAb,EAAgB;AACrBO,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,KAAhC;AAEAM,MAAAA,OAAO,CAACR,KAAK,CAACK,WAAW,GAAG,CAAf,CAAN,CAAP;AACAF,MAAAA,QAAQ,CAACE,WAAW,GAAG,CAAf,CAAR;AACD,KALM,MAKA;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,KAAhC;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAtB;AACD,GAfQ,EAeN,CAACA,KAAD,CAfM,CAAT;AAiBA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAE,SAAnB;AAA8B,MAAA,OAAO,EAAE;AAAA,eAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF,EAEGK,IAFH,eAGE;AAAQ,MAAA,SAAS,EAAE,QAAnB;AAA6B,MAAA,OAAO,EAAE;AAAA,eAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAlCD;;GAAMH,Y;;KAAAA,Y;AAoCN,eAAeA,YAAf","sourcesContent":["import { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n\n  //   console.log(\"workingn \", words, colour);\n\n  useEffect(() => {\n    if (index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index <= 0) {\n      console.log(\"im in idex <= 0 \", index);\n\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    } else {\n      console.log(\"wnhats hapengin \", index);\n    }\n    console.log(\"woooo \", index);\n  }, [index]);\n\n  return (\n    <div>\n      <button className={\"uparrow\"} onClick={() => setIndex(index - 1)} />\n      {word}\n      <button className={\"darrow\"} onClick={() => setIndex(index + 1)} />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}