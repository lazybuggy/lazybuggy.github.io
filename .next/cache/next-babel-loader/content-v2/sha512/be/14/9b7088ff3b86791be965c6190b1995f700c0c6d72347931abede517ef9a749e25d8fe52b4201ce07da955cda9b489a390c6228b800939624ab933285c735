{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx\";\nimport styles from \"../../styles/WordSwitcher.module.css\";\nimport { useState, useEffect } from \"react\"; // type Props = {\n//     data: WordSwitcherType\n// }\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher = ({\n  words,\n  colour\n}) => {\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const {\n    0: optionCount,\n    1: setOptionCount\n  } = useState(words.length);\n  const {\n    0: word,\n    1: setWord\n  } = useState(words[0]); //   console.log(\"workingn \", words, colour);\n\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.upArrow,\n      onClick: () => setIndex(index => index - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), word, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.downArrow,\n      onClick: () => setIndex(index => index + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default WordSwitcher;","map":{"version":3,"sources":["/Users/luciaokeh/Documents/Github Repos/lazybuggy.github.io/components/WordSwitcher.tsx"],"names":["styles","useState","useEffect","WordSwitcher","words","colour","index","setIndex","optionCount","setOptionCount","length","word","setWord","upArrow","downArrow"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sCAAnB;AAEA,SAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,YAAiD,GAAG,CAAC;AACzDC,EAAAA,KADyD;AAEzDC,EAAAA;AAFyD,CAAD,KAGpD;AACJ,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAACG,KAAK,CAACM,MAAP,CAA9C;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAACG,KAAK,CAAC,CAAD,CAAN,CAAhC,CAHI,CAKJ;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGE,WAA1B,EAAuC;AACrCI,MAAAA,OAAO,CAACR,KAAK,CAACE,KAAD,CAAN,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,KAAKE,WAAd,EAA2B;AAChCI,MAAAA,OAAO,CAACR,KAAK,CAAC,CAAD,CAAN,CAAP;AACAG,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,KAHM,MAGA,IAAID,KAAK,GAAG,CAAZ,EAAe;AACpBM,MAAAA,OAAO,CAACR,KAAK,CAACI,WAAW,GAAG,CAAf,CAAN,CAAP;AACAD,MAAAA,QAAQ,CAACC,WAAW,GAAG,CAAf,CAAR;AACD;AACF,GAVQ,EAUN,CAACF,KAAD,EAAQE,WAAR,CAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAER,MAAM,CAACa,OADpB;AAEE,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB;AAFzB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGK,IALH,eAME;AACE,MAAA,SAAS,EAAEX,MAAM,CAACc,SADpB;AAEE,MAAA,OAAO,EAAE,MAAMP,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB;AAFzB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;;AAqCA,eAAeH,YAAf","sourcesContent":["import styles from \"../../styles/WordSwitcher.module.css\";\nimport { WordSwitcherType } from \"../types/index\";\nimport { FunctionComponent, useState, useEffect } from \"react\";\n// type Props = {\n//     data: WordSwitcherType\n// }\n\n// const upArrowClick = () => {\n//   console.log(\"up clicked\");\n// };\n\n// const downArrowClick = () => {\n//   console.log(\"down clicked\");\n// };\n\nconst WordSwitcher: FunctionComponent<WordSwitcherType> = ({\n  words,\n  colour,\n}) => {\n  const [index, setIndex] = useState(0);\n  const [optionCount, setOptionCount] = useState(words.length);\n  const [word, setWord] = useState(words[0]);\n\n  //   console.log(\"workingn \", words, colour);\n\n  useEffect(() => {\n    if (index >= 0 && index < optionCount) {\n      setWord(words[index]);\n    } else if (index === optionCount) {\n      setWord(words[0]);\n      setIndex(0);\n    } else if (index < 0) {\n      setWord(words[optionCount - 1]);\n      setIndex(optionCount - 1);\n    }\n  }, [index, optionCount]);\n\n  return (\n    <div>\n      <button\n        className={styles.upArrow}\n        onClick={() => setIndex((index) => index - 1)}\n      />\n      {word}\n      <button\n        className={styles.downArrow}\n        onClick={() => setIndex((index) => index + 1)}\n      />\n    </div>\n  );\n};\n\nexport default WordSwitcher;\n"]},"metadata":{},"sourceType":"module"}